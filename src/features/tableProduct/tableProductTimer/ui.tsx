import React, { useEffect, useRef } from 'react';import { Typography } from '@mui/material';import { setTableProductTimer } from './model';interface IProductTimer {  tableId: string;  productId: string;  timerCount: number;  minutesLimit: number;  productUnits: number;}interface ITableProductTimerRef {  interval: NodeJS.Timeout | null;  value: number;}export const TableProductTimer: React.FC<IProductTimer> = ({  tableId,  productId,  timerCount,  minutesLimit,  productUnits}) => {  const ref = useRef<ITableProductTimerRef>({ interval: null, value: 0 });  ref.current.value = timerCount;  useEffect(() => {    if (!ref.current.interval) {      ref.current.interval = setInterval(() => {        setTableProductTimer({ tableId, productId, value: ++ref.current.value });      }, 60000);    }    return () => {      if (ref.current.interval) {        clearInterval(ref.current.interval);        ref.current.interval = null;      }    };  }, [timerCount]);  return (    <>      <Typography color="primary" variant="subtitle1" component="span">        {`${timerCount} `}      </Typography>      <Typography variant="subtitle1" component="span">        из {minutesLimit * productUnits}      </Typography>    </>  );};