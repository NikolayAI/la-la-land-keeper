import React from 'react';import { useStore } from 'effector-react';import { IconButton } from '@mui/material';import PlayArrowIcon from '@mui/icons-material/PlayArrow';import PauseIcon from '@mui/icons-material/Pause';import {  IPlayTableProductTimerParams,  IStopProductTableTimerParams} from '../../features/tableProductTimer';import { tablesModel } from '../../entities/tables';import {  ISetTableProductTimerParams,  TableProductTimerStatuses} from '../../shared/api';import { useTimer } from '../../shared/lib';interface IProductTimer {  tableId: string;  productId: string;  timerCount: number;  minutesLimit: number;  productUnits: number;  handleSetTimer: (payload: ISetTableProductTimerParams) => void;  handleStopTimer: (payload: IStopProductTableTimerParams) => void;  handlePlayTimer: (payload: IPlayTableProductTimerParams) => void;}export const TableProductTimer: React.FC<IProductTimer> = ({  tableId,  productId,  timerCount,  minutesLimit,  productUnits,  handleSetTimer,  handleStopTimer,  handlePlayTimer,}) => {  const timerStatus = useStore(tablesModel.$tables)[tableId].products[productId]?.timerStatus;  const isTimerPlay = timerStatus === TableProductTimerStatuses.PLAY;  useTimer({    tableId,    productId,    timerCount,    isTimerPlay,    handleSetTimer,    timerStatus,    interval: 60000,  });  const handlePause = () => {    handleStopTimer({      tableId,      productId,      value: TableProductTimerStatuses.STOP,    });  };  const handlePlay = () => {    handlePlayTimer({      tableId,      productId,      value: TableProductTimerStatuses.PLAY,    });  };  return (    <>      <IconButton color="primary" size="small" sx={{ cursor: 'default' }}>        {`${timerCount}`}      </IconButton>      <IconButton color="default" size="small" sx={{ cursor: 'default' }}>        / {minutesLimit * productUnits}      </IconButton>      {        isTimerPlay ? (          <IconButton size="small" onClick={handlePause}>            <PauseIcon fontSize="small" />          </IconButton>        ) : (          <IconButton size="small" onClick={handlePlay}>            <PlayArrowIcon fontSize="small" />          </IconButton>        )      }    </>  );};