import {  allSettled,  createEffect,  createEvent,  createStore,  fork,  forward} from 'effector';test('usage without domain', async () => {  const add = createEvent<number>()  const $count = createStore(0).on(add, (n, x) => n + x)  const addFx = createEffect(() => 0)  forward({from: addFx.doneData, to: add})  const scope = fork({    values: [[$count, 10]],    handlers: [[addFx, () => 5]],  })  await allSettled(addFx, {scope})  expect(scope.getState($count)).toBe(15)  expect($count.getState()).toBe(0)})