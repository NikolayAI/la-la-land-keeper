import { allSettled, fork } from 'effector';import { productsModel } from '.';import { createProduct, deleteProduct } from '../../shared/api/products';const params = {  id: '1',  title: 'test',  price: 1,  isPiece: false,  needTimer: false,  eachProductUnitMinutesTimer: 0,};jest.mock('../../shared/api/products');const mockCreateProduct = createProduct as jest.MockedFunction<typeof createProduct>;const mockDeleteProduct = deleteProduct as jest.MockedFunction<typeof deleteProduct>;test('createProductFx should calls ProductsAPI.createProduct', async () => {  const fn = jest.fn(createProduct);  const scope = fork();  await allSettled(productsModel.createProductFx, { scope, params });  expect(mockCreateProduct).toHaveBeenCalledTimes(1);});test('deleteProductFx should calls ProductsAPI.deleteProduct', async () => {  const fn = jest.fn(deleteProduct);  const scope = fork();  await allSettled(productsModel.deleteProductFx, { scope, params });  expect(mockDeleteProduct).toHaveBeenCalledTimes(1);});