import { allSettled, fork } from 'effector';import { tablesModel } from '../tables';import { createTable, deleteTable } from '../../shared/api/tables';import { TableProductsType, TableProductTimerStatuses } from '../../shared/api';jest.mock('../../shared/api/tables');const mockCreateTable = createTable as jest.MockedFunction<typeof createTable>;const mockDeleteTable = createTable as jest.MockedFunction<typeof deleteTable>;const table = {  id: '1',  title: 'неизвестный стол',  products: {},  units: 1,  minutesTimer: 0,  timerStatus: TableProductTimerStatuses.PLAY,}test('createTableFx should calls TablesAPI.createTable', async () => {  const scope = fork();  await allSettled(tablesModel.createTableFx, { scope });  expect(mockCreateTable).toHaveBeenCalledTimes(1);});test('deleteTableFx should calls TablesAPI.deleteTable', async () => {  const scope = fork({    values: [[tablesModel.$tables, table]]  });  await allSettled(tablesModel.deleteTableFx, { scope, params: {id: '1'} });  expect(mockDeleteTable).toHaveBeenCalledTimes(1);});